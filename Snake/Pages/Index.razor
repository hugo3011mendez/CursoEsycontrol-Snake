@page "/"

<h1>Snake</h1>

Welcome to the Snake game. <br/>

@* Creo un div con estilos y el mismo tamaño que le damos al mapa *@
<div @ref="Mapa" style="background-color:grey;width:@(_mapSize)px;height:@(_mapSize)px; display:inline-block; border:5px solid darkred;">
</div>

<br />

@* Botón para que el usuario pueda iniciar o finalizar la partida *@
<button @ref="BotonIniciar" class="btn btn-primary">@_textoBotonIniciar</button>


@* Form simple para que el usuario pueda establecer el tamaño del mapa *@
<EditForm Model="@mapa" OnValidSubmit="MapOnValidSubmit" OnInvalidSubmit="MapOnInvalidSubmit">
    <DataAnnotationsValidator></DataAnnotationsValidator> @* Añado el validador del formulario *@

    Tamaño del mapa : <InputNumber @bind-Value="@mapa.Size" /> @* Para introducir el valor del tamaño del mapa *@
    @* Muestro justo debajo, el mensaje de error si el tamaño del mapa está fuera del rango *@
    <ValidationMessage For="@(()=>mapa.Size)"/>
</EditForm>


<EditForm Model="@snake" OnValidSubmit="SnakeOnValidSubmit" OnInvalidSubmit="SnakeOnInvalidSubmit">
    <DataAnnotationsValidator></DataAnnotationsValidator> @* Añado el validador del formulario *@

    Nivel de dificultad : <InputNumber @bind-Value="@snake.Dificultad" /> @* Para introducir la dificultad *@
    @* Muestro justo debajo, el mensaje de error si el nivel de dificultad está fuera del rango *@
    <ValidationMessage For="@(()=>snake.Dificultad)"/>
</EditForm>


@code{
    // Referencias a los elementos del mapa y el botón para iniciar o parar la partida
    private ElementReference Mapa;
    private ElementReference BotonIniciar;
    
    /// <summary> Acciones a realizar cada vez que se refresque el DOM y se renderice la página </summary>
    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender) // La primera vez que se renderice :
        {
            BotonIniciar.FocusAsync(); // Establezco el foco en el botón para iniciar la partida
        }
    }
}